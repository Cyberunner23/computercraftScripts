-----------------------------------------------------------
----------------------- Global Vars -----------------------
-----------------------------------------------------------

local remoteScriptListLink   = "https://raw.githubusercontent.com/Cyberunner23/computercraftScripts/master/scriptList"
local remoteScriptListParsed = {}
local localScriptListParsed  = {}

-----------------------------------------------------------
--------------------- Util Functions ----------------------
-----------------------------------------------------------
parseScriptList(scriptList)
  scriptListParsed = {}
  while true do
    local scriptName = scriptList.readLine()
    if scriptName ~= nil then
      scriptNameParsed[scriptName]["scriptVersion"] = scriptList.readLine()
    else
      break
    end
  end
  return scriptListParsed
end

-----------------------------------------------------------
----------- Get And Parse Script List From Repo -----------
-----------------------------------------------------------

--Get script list from repo
local remoteScriptList      = http.get(remoteScriptListLink)

if not remoteScriptList then
  error("Could not download the script list from the repo. Exiting...")
end

--Parse remote script list
--remoteScriptListParsed = parseScriptList(remoteScriptList)


-----------------------------------------------------------
--- Check If The Local Script List Exists And Parse It ---
-----------------------------------------------------------

--Check if the dir exists, if not make one
if not fs.isDir("ScriptList") then
  fs.makeDir("ScriptList")
end

--Check if the local script list exists, if not make a blank one for now.
if not fs.exists("ScriptList/ScriptList.txt") then
  local tmpFileHandle = fs.open("ScriptList/ScriptList.txt", "w")
  tmpFileHandle.close()
end

--Open and read local script list
local fileHandle = fs.open("ScriptList/ScriptList.txt", "r")
if fileHandle == nil then
  error("Could not open the local script list. Something went horribly wrong. Exiting...")
end

--Parse local script list
localScriptListParsed = parseScriptList(fileHandle)




--TODO: check if scripts need updating, if so suggest user to update.

--TODO: Show list of available scripts ans prompt user for which one is wanted.


